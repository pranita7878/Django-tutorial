Sr No	Question	Options	Answer
1	Which statement accurately describes the role of Django templates?	They generate dynamic content based on data from views and context processors. , They define URL patterns for mapping URLs to views., They handle database interactions and data models., They manage user authentication and authorization.	They generate dynamic content based on data from views and context processors.	
2	The Django template language borrows syntax elements from which template engines?	Jinja2 and Twig , React and Vue.js, PHP Blade and Smarty, JSP and Groovy Templates	Jinja2 and Twig	
3	What is the primary purpose of Django templates?	variable_name To separate presentation logic from application logic, promoting maintainability and reusability., To enhance security by preventing cross-site scripting (XSS) vulnerabilities., To define dynamic URLs for your Django application., To store user-uploaded files securely.	variable_name To separate presentation logic from application logic, promoting maintainability and reusability.	
4	How do you create custom template tags and filters?	By creating Python functions and registering them with the template engine., Using third-party libraries specifically designed for custom tags and filters., Defining them directly in your templates using template syntax., Overriding built-in tags and filters in your Django project.	By creating Python functions and registering them with the template engine.	
5	What is the benefit of using inheritance in templates?	To create base templates with common layout and structure, reducing code duplication., To dynamically include different template content based on user permissions., To improve the performance of your Django application., To implement multi-language support in your templates.	To create base templates with common layout and structure, reducing code duplication.	
6	How can you pass context data to a template when rendering it?	By using the render function in your views and providing a context dictionary., Passing data directly as arguments to the template tag that renders the template., Storing data in session variables and accessing them in the template., Defining global variables in your Django project settings.	By using the render function in your views and providing a context dictionary.	
7	What are some best practices for writing secure and maintainable Django templates?	Use template tags and filters for data processing and manipulation., Escape all user-generated content to prevent XSS vulnerabilities., Avoid using inline logic and conditional statements in templates., Store sensitive data directly in templates for easy access.	Escape all user-generated content to prevent XSS vulnerabilities.	
8	Which Django view function typically handles the logic for retrieving and preparing data to be displayed in a template?	render, get_data, get_context_data, display	get_context_data	
9	What is the recommended approach for passing complex data structures (e.g., dictionaries, lists) to templates?	Storing them directly in context variables, Serializing them using JSON, Using template context processors, Defining custom template tags	Using template context processors	
10	How can you handle pagination of large datasets in Django templates?	Manually calculating page numbers and offsets (Possible, but not recommended), Using the Paginator class , Writing custom pagination logic , Relying on JavaScript for client-side pagination	Using the Paginator class	
