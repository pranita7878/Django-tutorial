Sr No	Question	Options	Answer
1	Where are static files typically served from in a Django project?	The MEDIA_ROOT directory, The STATIC_ROOT directory , The templates directory, The URL patterns	The STATIC_ROOT directory	
2	Which command is used to collect static files in a Django project?	manage.py createstatic, manage.py migrate, manage.py runserver, manage.py shell	manage.py createstatic	
3	What is the purpose of the STATIC_URL setting in Django's settings.py file?	To define the base URL for static files , To specify the media root directory, To control user authentication, To manage database connections	To define the base URL for static files	
4	How can you include a static CSS file in a Django template?	Using the {% load staticfiles %} tag and the url tag with the STATIC_URL , By directly referencing the file path in the HTML, Through CSS import statements, Cannot be included in templates	Using the {% load staticfiles %} tag and the url tag with the STATIC_URL	
5	What is the benefit of using Django's static files handling mechanism?	Enhances security by isolating user-uploaded files, Simplifies URL management for static assets , Provides caching capabilities for dynamic content, Improves database performance	Simplifies URL management for static assets	
6	What is the recommended directory structure for organizing static files in a Django project?	Place all static files directly in the project root, Create a single static directory within the project, Organize files within app directories without a dedicated static folde, Store static files within the URL patterns directory	Create a single static directory within the project	
7	What happens if you collect static files while an app is uninstalled?	Static files from the uninstalled app are copied and served normally, An error occurs, preventing static file collection, Only files from installed apps are included in the collection, Uninstalled app files are ignored silently	An error occurs, preventing static file collection	
8	How can you configure a different path for serving static files in development and production environments?	Use Django's URL patterns to dynamically switch paths, Set different STATIC_ROOT values in settings.py for each environment, Modify the collectstatic command to handle different paths, No configuration is needed; Django automatically adjusts	Set different STATIC_ROOT values in settings.py for each environment	
9	What best practices should you follow when using static files in Django?	Include static files directly in templates for convenience , Use CSS import statements within templates , Organize files clearly within static directories, use versioning for assets, and leverage URL optimization, Minimize static file usage for optimal performance	Organize files clearly within static directories, use versioning for assets, and leverage URL optimization	
10	Which advanced technique can you use to further optimize static file serving in Django?	Custom middlewares to manipulate response headers, Compiling multiple static files into one, Modifying Django's core staticfiles app, Increasing server cache size	Custom middlewares to manipulate response headers	
